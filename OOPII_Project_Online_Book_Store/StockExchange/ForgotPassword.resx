<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbSendPassword.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAeAB4AAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAAeAMgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5
        nwB0Hb16/wCH05x6nrRj/OaKK/sDU/k3mYY/zmjH+c0UUai5gx/nNGP85ooo1DmD8G/X29vcfn9cC/Pt
        2qzbgCMdwen5/p3xXt37P/gvR9e+GDXGm+EfBvxC8ZNqk8N3o+va5PYXENqIoPsf9nwQ3lrLeXE8j3ym
        KLz5MwQKEQyr5u9pH7Ftz8U/HHi+a38JfEzw5Z+GjpMF/wCHtN8Iy6xrdjfX1mblwLSSeJ0sFe2udks8
        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
</value>
  </data>
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>